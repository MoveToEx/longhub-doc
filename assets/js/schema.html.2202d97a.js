"use strict";(self.webpackChunklonghub_doc=self.webpackChunklonghub_doc||[]).push([[519],{247:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>g,data:()=>y});var e=a(854);const t=(0,e.Lk)("h1",{id:"api-schema",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#api-schema"},[(0,e.Lk)("span",null,"API Schema")])],-1),p=(0,e.Lk)("p",null,"This page describes some common attributes shared by all endpoints.",-1),o=(0,e.Lk)("br",null,null,-1),l={href:"https://www.typescriptlang.org/docs/handbook/utility-types.html",target:"_blank",rel:"noopener noreferrer"},i={href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Lk)("code",null,"Pick<T, K>",-1),r=(0,e.Lk)("code",null,"{...} & {...}",-1),u=(0,e.Fv)('<h2 id="types" tabindex="-1"><a class="header-anchor" href="#types"><span>Types</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Rating</span> <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;moderate&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;violent&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> <span class="token class-name">Self</span> <span class="token operator">=</span> User <span class="token operator">&amp;</span> <span class="token punctuation">{</span>          <span class="token comment">// User object of yourself</span>\n    createdAt<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    permission<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    passwordHash<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    accessKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> <span class="token class-name">Tag</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> <span class="token class-name">Post</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>             <span class="token comment">// UUID</span>\n    text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    rating<span class="token operator">:</span> Rating<span class="token punctuation">;</span>\n    image<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>          <span class="token comment">// id + extension</span>\n    imageURL<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>       <span class="token comment">// Full URL</span>\n    imageHash<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>      <span class="token comment">// A 64-char 01 string</span>\n    createdAt<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>      <span class="token comment">// ISO formatted creation date (YYYY-MM-DDThh:mm:ss.mmmZ)</span>\n    updatedAt<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>      <span class="token comment">// ISO formatted last update date</span>\n    uploaderId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>     <span class="token comment">// `uploader.id`. May be null for legacy posts</span>\n    tags<span class="token operator">?</span><span class="token operator">:</span> Tag<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    uploader<span class="token operator">?</span><span class="token operator">:</span> User<span class="token punctuation">;</span>        <span class="token comment">// Uploader. May be null for legacy posts</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>Self</code> object is used in place of <code>User</code> when applies on yourself, e.g. in the response of a successful <code>POST /api/account/login</code> request or a <code>POST /api/post</code> request.</p><h2 id="validation" tabindex="-1"><a class="header-anchor" href="#validation"><span>Validation</span></a></h2>',4),d={href:"https://zod.dev/",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Lk)("code",null,"PUT /api/post/[id]",-1),v=(0,e.Lk)("br",null,null,-1),m=(0,e.Lk)("code",null,"400 Bad Request",-1),b=(0,e.Fv)('<div class="language-http line-numbers-mode" data-ext="http" data-title="http"><pre class="language-http"><code>POST https://longhub.top/api/post/search\n<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>\n<span class="token application-json">\n<span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;op&quot;</span><span class="token operator">:</span> <span class="token string">&quot;contains&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Will result in the following response:</p><div class="language-http line-numbers-mode" data-ext="http" data-title="http"><pre class="language-http"><code><span class="token response-status"><span class="token http-version property">HTTP/1.1</span> <span class="token status-code number">400</span> <span class="token reason-phrase string">Bad Request</span></span>\n<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>\n<span class="token application-json">\n<span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;invalid_type&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;expected&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;received&quot;</span><span class="token operator">:</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token number">0</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;value&quot;</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Expected string, received number&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),h={},g=(0,a(209).A)(h,[["render",function(n,s){const a=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[t,p,(0,e.Lk)("p",null,[(0,e.eW)("Note that these types describe the fundamental items of responses. You should refer to the endpoint document for the exact response schema."),o,(0,e.eW)(" Also, some endpoints in the document are described with "),(0,e.Lk)("a",l,[(0,e.eW)("Typescript utility types"),(0,e.bF)(a)]),(0,e.eW)(" and "),(0,e.Lk)("a",i,[(0,e.eW)("Typescript everyday types"),(0,e.bF)(a)]),(0,e.eW)(", like "),c,(0,e.eW)(" and "),r,(0,e.eW)(". It is suggested that you get familiar with them first.")]),u,(0,e.Lk)("p",null,[(0,e.eW)("LONG Hub uses "),(0,e.Lk)("a",d,[(0,e.eW)("zod"),(0,e.bF)(a)]),(0,e.eW)(" to prevent ill-formed request from causing server side errors. In some endpoints that require json as request body (like "),k,(0,e.eW)("), your request is checked against the schema described in their respective pages."),v,(0,e.eW)(" Upon invalid request body, the server will return a "),m,(0,e.eW)(" and an array of validation errors as response body. For example:")]),b])}]]),y=JSON.parse('{"path":"/api/schema.html","title":"API Schema","lang":"en-US","frontmatter":{"title":"API Schema"},"headers":[{"level":2,"title":"Types","slug":"types","link":"#types","children":[]},{"level":2,"title":"Validation","slug":"validation","link":"#validation","children":[]}],"git":{"updatedTime":1736901516000,"contributors":[{"name":"MoveToEx","email":"39954725+MoveToEx@users.noreply.github.com","commits":3}]},"filePathRelative":"api/schema.md"}')}}]);